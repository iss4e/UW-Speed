[
    {
        "id": "29872d69.1b57fa",
        "type": "tab",
        "label": "new SPEED"
    },
    {
        "id": "891ea5e0.7635a8",
        "type": "tab",
        "label": "Flow 1"
    },
    {
        "id": "a5663e7.9d862c",
        "type": "tab",
        "label": "Flow 2"
    },
    {
        "id": "cb74d090.a693c8",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "d675b3db.313288",
        "type": "MySQLdatabase",
        "z": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "speed",
        "tz": ""
    },
    {
        "id": "a500e7c9.a8e7b8",
        "type": "ui_group",
        "z": "",
        "name": "Mode Screen",
        "tab": "cb74d090.a693c8",
        "disp": true,
        "width": "6"
    },
    {
        "id": "4b67cba4.35d9d4",
        "type": "ui_group",
        "z": "",
        "name": "Sensors Values",
        "tab": "cb74d090.a693c8",
        "disp": true,
        "width": "6"
    },
    {
        "id": "e17d5f6.0c28a2",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "cb74d090.a693c8",
        "disp": true,
        "width": "6"
    },
    {
        "id": "ae5f7586.bec3c8",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "Helvetica Neue",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "Helvetica Neue",
                "edited": false
            },
            "customTheme": {
                "name": "",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "Helvetica Neue"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                }
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "fab2d442.64e68",
        "type": "rpi-gpio in",
        "z": "29872d69.1b57fa",
        "name": "Mode Button",
        "pin": "40",
        "intype": "in",
        "debounce": "200",
        "read": false,
        "x": 196,
        "y": 142,
        "wires": [
            [
                "90c25fda.b992b"
            ]
        ]
    },
    {
        "id": "90c25fda.b992b",
        "type": "switch",
        "z": "29872d69.1b57fa",
        "name": "Button on?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 401,
        "y": 156,
        "wires": [
            [
                "1d4b6c9e.815aa3",
                "45a6ca39.62351c"
            ]
        ]
    },
    {
        "id": "fa626da3.54ca3",
        "type": "rpi-gpio in",
        "z": "29872d69.1b57fa",
        "name": "Add Button",
        "pin": "38",
        "intype": "in",
        "debounce": "200",
        "read": false,
        "x": 196,
        "y": 254,
        "wires": [
            [
                "d415669e.79a8c"
            ]
        ]
    },
    {
        "id": "d415669e.79a8c",
        "type": "switch",
        "z": "29872d69.1b57fa",
        "name": "Button on?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 381,
        "y": 258,
        "wires": [
            [
                "b983d361.155e48",
                "45a6ca39.62351c"
            ]
        ]
    },
    {
        "id": "b983d361.155e48",
        "type": "switch",
        "z": "29872d69.1b57fa",
        "name": "Check mode",
        "property": "mode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "changeMoney",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Vmax",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Vmin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Imin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "displayCustomers",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 6,
        "x": 550,
        "y": 249,
        "wires": [
            [
                "7e23058c.a0140c"
            ],
            [
                "6ba958d6.0c2408"
            ],
            [
                "da4c43b0.4202d"
            ],
            [
                "36f8c93a.c66206"
            ],
            [
                "3e898c90.aa8834"
            ],
            [
                "83ad2a35.ebef98"
            ]
        ]
    },
    {
        "id": "7e23058c.a0140c",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "addMoney",
        "func": "var id = global.get(\"id\");\nvar pythonPathStr = global.get(\"pythonPath\");\nvar addedAmount = global.get(\"addedAmount\");\nvar balance = global.get(\"balance\");\n\n// customer exists\nif (id != -1) {\n    balance += 1;\n    global.set(\"balance\", balance);\n    // update database\n    msg.topic=\"UPDATE users SET money =\" + balance.toString() + \" where id =\" + id.toString() + \";\";\n    // create object to write to log file\n    var userInfoPayload = {};\n    userInfoPayload.date = new Date().toString();\n    userInfoPayload.id = id;\n    userInfoPayload.balance = balance;\n    userInfoPayload.info = global.get(\"updatedBalance\");\n    var addToLog = { payload:userInfoPayload };\n    return [addToLog, msg, null];\n    \n} else {\n    var changeMoneyInvalidIDStr = global.get(\"changeMoneyInvalidId\");\n    msg.payload = pythonPathStr.concat(\"changeMoneyInvalidIDStr\");\n    return [null, null, msg];\n}",
        "outputs": "3",
        "noerr": 0,
        "x": 781,
        "y": 175,
        "wires": [
            [
                "336bee9e.104a8a",
                "b9d0d2f9.83849"
            ],
            [
                "336bee9e.104a8a",
                "fce81d25.91cb28",
                "84dca6db.fbb8a"
            ],
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "ac98e1bb.a6c1e8",
        "type": "mysql",
        "z": "29872d69.1b57fa",
        "mydb": "d675b3db.313288",
        "name": "",
        "x": 1297,
        "y": 39,
        "wires": [
            []
        ]
    },
    {
        "id": "75424784.4f1bf8",
        "type": "rpi-gpio in",
        "z": "29872d69.1b57fa",
        "name": "Subtract Button",
        "pin": "36",
        "intype": "in",
        "debounce": "200",
        "read": false,
        "x": 208,
        "y": 350,
        "wires": [
            [
                "d7c36ce4.61293"
            ]
        ]
    },
    {
        "id": "d7c36ce4.61293",
        "type": "switch",
        "z": "29872d69.1b57fa",
        "name": "Button on?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 381,
        "y": 333,
        "wires": [
            [
                "a5e9c40a.70701",
                "45a6ca39.62351c"
            ]
        ]
    },
    {
        "id": "a5e9c40a.70701",
        "type": "switch",
        "z": "29872d69.1b57fa",
        "name": "Check mode",
        "property": "mode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "changeMoney",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Vmax",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Vmin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Imin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "displayCustomers",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 6,
        "x": 553,
        "y": 343,
        "wires": [
            [
                "24efce2a.b2776a"
            ],
            [
                "458b3125.5e05b"
            ],
            [
                "947dde22.9f891"
            ],
            [
                "6407602c.95387"
            ],
            [
                "a61dbdc2.9e2b"
            ],
            [
                "1e0a26f4.d78ae1"
            ]
        ]
    },
    {
        "id": "24efce2a.b2776a",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "SubtractMoney",
        "func": "var id = global.get(\"id\");\nvar balance = global.get(\"balance\");\nvar pythonPathStr = global.get(\"pythonPath\");\n\nif (id != -1) {\n    balance -= 1;\n    if (balance >= 0) {\n      global.set(\"balance\", balance);\n      // update database\n      msg.topic=\"UPDATE users SET money =\" + balance.toString() + \" where id =\" + id.toString() + \";\";\n      // create object to write to log file\n      var userInfoPayload = {};\n      userInfoPayload.date = new Date().toString();\n      userInfoPayload.id = id;\n      userInfoPayload.balance = balance;\n      userInfoPayload.info = global.get(\"updatedBalance\");\n      var addToLog = { payload:userInfoPayload };\n      return [addToLog, msg, null];  \n    }\n\n} else {\n    var changeMoneyInvalidIDStr = global.get(\"changeMoneyInvalidId\");\n    msg.payload = pythonPathStr.concat(\"changeMoneyInvalidIDStr\");\n    return [null, null, msg];\n}",
        "outputs": "3",
        "noerr": 0,
        "x": 782.5576782226562,
        "y": 208.25,
        "wires": [
            [
                "b9d0d2f9.83849"
            ],
            [
                "84dca6db.fbb8a",
                "fce81d25.91cb28"
            ],
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "84dca6db.fbb8a",
        "type": "mysql",
        "z": "29872d69.1b57fa",
        "mydb": "d675b3db.313288",
        "name": "",
        "x": 1296,
        "y": 144,
        "wires": [
            []
        ]
    },
    {
        "id": "f23cabc7.77af28",
        "type": "inject",
        "z": "29872d69.1b57fa",
        "name": "INITIALIZATION",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 114,
        "y": 563.0000305175781,
        "wires": [
            [
                "de454951.4d09b8",
                "6bc8741d.dc728c",
                "474834c8.a3fc4c",
                "29d3c64.83fa1ba"
            ]
        ]
    },
    {
        "id": "a5c16863.66693",
        "type": "debug",
        "z": "29872d69.1b57fa",
        "name": "stderr & code",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 454,
        "y": 682,
        "wires": []
    },
    {
        "id": "8074f7ad.ab5f58",
        "type": "delay",
        "z": "29872d69.1b57fa",
        "name": "Restart in case of failure",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 276,
        "y": 739,
        "wires": [
            [
                "1d056c4d.0d787c"
            ]
        ]
    },
    {
        "id": "a4ef0418.7ea918",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "ReadRFID",
        "func": "var id = parseInt(msg.payload,16);\nglobal.set(\"id\", id);\n\n\nif (global.get(\"id\") != -1) { // check if id is real\n    msg.topic=\"SELECT * FROM users WHERE type='money' AND id='\"+ id.toString() +\n    \"';\";\n    return msg;\n}\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 453,
        "y": 647,
        "wires": [
            [
                "30d598c3.fe2fb8",
                "afaecb4e.a659",
                "45a6ca39.62351c"
            ]
        ]
    },
    {
        "id": "d2042a5.3f981d8",
        "type": "rpi-gpio out",
        "z": "29872d69.1b57fa",
        "name": "LED",
        "pin": "15",
        "set": false,
        "level": "0",
        "out": "pwm",
        "x": 1835,
        "y": 613,
        "wires": []
    },
    {
        "id": "5519b0f9.68034",
        "type": "rpi-gpio out",
        "z": "29872d69.1b57fa",
        "name": "BUZZER",
        "pin": "12",
        "set": false,
        "level": "0",
        "out": "pwm",
        "x": 1842,
        "y": 547,
        "wires": []
    },
    {
        "id": "1d056c4d.0d787c",
        "type": "exec",
        "z": "29872d69.1b57fa",
        "command": "python",
        "addpay": false,
        "append": "/home/pi/.node-red/user_modules/MFRC522-python/Read.py",
        "useSpawn": true,
        "timer": "",
        "name": "RFID Reader",
        "x": 250,
        "y": 681,
        "wires": [
            [
                "a4ef0418.7ea918"
            ],
            [
                "a5c16863.66693"
            ],
            [
                "8074f7ad.ab5f58",
                "a5c16863.66693"
            ]
        ]
    },
    {
        "id": "df1a7beb.11a63",
        "type": "mysql",
        "z": "29872d69.1b57fa",
        "mydb": "d675b3db.313288",
        "name": "",
        "x": 1297,
        "y": 175,
        "wires": [
            []
        ]
    },
    {
        "id": "30d598c3.fe2fb8",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "OperationSuccessful",
        "func": "msg.payload=100;\nnode.send(msg);\nmsg.payload=0;\nsetTimeout(function(){node.send(msg);},500);",
        "outputs": 1,
        "noerr": 0,
        "x": 1392,
        "y": 625,
        "wires": [
            [
                "5519b0f9.68034",
                "d2042a5.3f981d8"
            ]
        ]
    },
    {
        "id": "3bf30507.c7290a",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "OperationFailed",
        "func": "for(var i=0;i<4;i++){\n    var t=i*2*100;\n    setTimeout(function(){node.send({payload:100});},t);\n    setTimeout(function(){node.send({payload:0});},t+100);\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1389,
        "y": 657,
        "wires": [
            [
                "5519b0f9.68034",
                "d2042a5.3f981d8"
            ]
        ]
    },
    {
        "id": "aaf1dac4.def68",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Init DB Tables",
        "func": "// Init users table\nmsg.topic=\"CREATE TABLE IF NOT EXISTS users (\"+\n    \"stamp TIMESTAMP DEFAULT 0,\"+\n    \"id BIGINT,\"+\n    \"money INT,\"+\n    \"type VARCHAR(256)\"+\n    \");\";\nnode.send(msg);\n\n// Init discharge_current table\nmsg.topic=\"CREATE TABLE IF NOT EXISTS discharge_current (\"+\n    \"stamp TIMESTAMP DEFAULT 0,\"+\n    \"discharge FLOAT\"+\n    \");\";\nnode.send(msg);\n\n// Init charge_current table\nmsg.topic=\"CREATE TABLE IF NOT EXISTS charge_current (\"+\n    \"stamp TIMESTAMP DEFAULT 0,\"+\n    \"charge FLOAT\"+\n    \");\";\nnode.send(msg);\n\n// Init voltage_values table\nmsg.topic=\"CREATE TABLE IF NOT EXISTS voltage_values (\"+\n    \"stamp TIMESTAMP DEFAULT 0,\"+\n    \"voltage FLOAT\"+\n    \");\";\nnode.send(msg);",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 814,
        "wires": [
            [
                "e4717649.9455c8"
            ]
        ]
    },
    {
        "id": "e4717649.9455c8",
        "type": "mysql",
        "z": "29872d69.1b57fa",
        "mydb": "d675b3db.313288",
        "name": "",
        "x": 458,
        "y": 815,
        "wires": [
            []
        ]
    },
    {
        "id": "de454951.4d09b8",
        "type": "delay",
        "z": "29872d69.1b57fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 83,
        "y": 640,
        "wires": [
            [
                "aaf1dac4.def68",
                "1d056c4d.0d787c"
            ]
        ]
    },
    {
        "id": "afaecb4e.a659",
        "type": "mysql",
        "z": "29872d69.1b57fa",
        "mydb": "d675b3db.313288",
        "name": "",
        "x": 572,
        "y": 572,
        "wires": [
            [
                "ad6dcaba.f27d88"
            ]
        ]
    },
    {
        "id": "81db020d.76a828",
        "type": "mysql",
        "z": "29872d69.1b57fa",
        "mydb": "d675b3db.313288",
        "name": "speed",
        "x": 1298,
        "y": 209,
        "wires": [
            [
                "c5967e8b.2011c"
            ]
        ]
    },
    {
        "id": "336bee9e.104a8a",
        "type": "exec",
        "z": "29872d69.1b57fa",
        "command": "python ",
        "addpay": true,
        "append": "",
        "useSpawn": true,
        "timer": "",
        "name": "",
        "x": 1831,
        "y": 365.5,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c5967e8b.2011c",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Successful Add",
        "func": "var path_to_python = global.get(\"pythonPath\")\nvar rfid = global.get(\"id\");\nvar idAddedStr = global.get(\"idAdded\")\nmsg.payload = path_to_python.concat(idAddedStr, rfid);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1540,
        "y": 209,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "fce81d25.91cb28",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Current Balance",
        "func": "var balance = global.get(\"balance\");\nvar pythonPathStr = global.get(\"pythonPath\");\nvar balanceStr = global.get(\"balanceStr\");\nmsg.payload = pythonPathStr.concat(balanceStr, balance.toString());\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "x": 1020,
        "y": 300,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "2e907944.54bea6",
        "type": "pimcp3008",
        "z": "29872d69.1b57fa",
        "name": "Discharge Current ",
        "pin": 0,
        "dnum": "1",
        "x": 303,
        "y": 909,
        "wires": [
            [
                "851dad64.9e6f88"
            ]
        ]
    },
    {
        "id": "6285a48d.dadf7c",
        "type": "pimcp3008",
        "z": "29872d69.1b57fa",
        "name": "Charging Current ",
        "pin": "1",
        "dnum": "1",
        "x": 297,
        "y": 943,
        "wires": [
            [
                "22a015c2.39c982"
            ]
        ]
    },
    {
        "id": "851dad64.9e6f88",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "",
        "func": "var adc = msg.payload;\nvar numAdcBits = 1024;\nvar current = 36.7*adc/numAdcBits - 18.3;\nvar twoDecCurrent = Math.round(current * 100) / 100;\nvar Imin = global.get(\"Imin\");\n\nmsg.topic = \"dischargingCurrent\";\nmsg.payload = twoDecCurrent;\n\nreturn msg;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 484,
        "y": 896,
        "wires": [
            [
                "35da9466.b6d5c4"
            ]
        ]
    },
    {
        "id": "22a015c2.39c982",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "",
        "func": "var adc = msg.payload;\nvar numAdcBits = 1024;\nvar current = 36.7*adc/numAdcBits - 18.3;\nvar Imin = global.get(\"Imin\");\nvar twoDecCurrent = Math.round(current * 100) / 100;\n// setting the current current value for the status mode to trigger in another node\nglobal.set(\"current\", twoDecCurrent);\nvar good = 1;\nvar bad = 1;\n\n// dirty panel or cloudy day\nif (current < Imin) {\n    global.set(\"panelStat\", bad);\n    global.set(\"reportStat\", bad);\n}\n\nelse {\n    global.set(\"panelStat\", good);\n}\n\nmsg.topic = \"chargingCurrent\";\nmsg.payload = twoDecCurrent;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 477,
        "y": 943,
        "wires": [
            [
                "35da9466.b6d5c4"
            ]
        ]
    },
    {
        "id": "1ee51822.4280f",
        "type": "inject",
        "z": "29872d69.1b57fa",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": false,
        "x": 111,
        "y": 945,
        "wires": [
            [
                "2e907944.54bea6",
                "6285a48d.dadf7c",
                "aec0f6af.da79a8"
            ]
        ]
    },
    {
        "id": "da4c43b0.4202d",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Add Vmin",
        "func": "var Vmin = global.get(\"Vmin\");\nVmin += 1;\nglobal.set(\"Vmin\", Vmin);\nvar pythonPathStr = global.get(\"pythonPath\");\nvar VminStr = global.get(\"VminStr\");\nmsg.payload = pythonPathStr.concat(VminStr, Vmin.toString(), \" V\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 782,
        "y": 294,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "458b3125.5e05b",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Sub Vmax",
        "func": "var Vmax = global.get(\"Vmax\");\nVmax -= 1;\nglobal.set(\"Vmax\", Vmax);\nvar pythonPathStr = global.get(\"pythonPath\");\nvar VmaxStr = global.get(\"VmaxStr\");\nmsg.payload = pythonPathStr.concat(VmaxStr, Vmax.toString(), \" V\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 265,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "36f8c93a.c66206",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Add Imin",
        "func": "var Imin = global.get(\"Imin\");\nif (Imin < 1) {\n    Imin = Imin + 0.1;\n    var IminRound = Math.round(Imin * 10) / 10;\n} else {\n    Imin += 1;\n    var IminRound = Imin;\n}\nglobal.set(\"Imin\", IminRound);\nvar pythonPathStr = global.get(\"pythonPath\");\nvar IminStr = global.get(\"IminStr\");\nmsg.payload = pythonPathStr.concat(IminStr, IminRound.toString(), \" A\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 768,
        "y": 356,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "6ba958d6.0c2408",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Add Vmax",
        "func": "var Vmax = global.get(\"Vmax\");\nVmax += 1;\nglobal.set(\"Vmax\", Vmax);\nvar pythonPathStr = global.get(\"pythonPath\");\nvar VmaxStr = global.get(\"VmaxStr\");\nmsg.payload = pythonPathStr.concat(VmaxStr, Vmax.toString(), \" V\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 775,
        "y": 237,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "947dde22.9f891",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Sub Vmin",
        "func": "var Vmin = global.get(\"Vmin\");\nVmin -= 1;\nglobal.set(\"Vmin\", Vmin);\nvar pythonPathStr = global.get(\"pythonPath\");\nvar VminStr = global.get(\"VminStr\");\nmsg.payload = pythonPathStr.concat(VminStr, Vmin.toString(), \" V\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 326,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "6407602c.95387",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Sub Imin",
        "func": "var Imin = global.get(\"Imin\");\nif (Imin < 1) {\n    Imin = Imin - 0.1;\n    var IminRound = Math.round(Imin * 10) / 10;\n} else {\n    Imin -= 1;\n    var IminRound = Imin;\n}\nglobal.set(\"Imin\", IminRound);\nvar pythonPathStr = global.get(\"pythonPath\");\nvar IminStr = global.get(\"IminStr\");\nmsg.payload = pythonPathStr.concat(IminStr, IminRound.toString(), \" A\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 767,
        "y": 389,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "1d4b6c9e.815aa3",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Switch Mode",
        "func": "// switches mode\n\n// get mode and python path\nvar pythonPathStr = global.get(\"pythonPath\");\nvar modeSetting = global.get(\"mode\");\nvar reportStat = global.get(\"reportStat\");\nvar bad = 0;\nvar good = 1;\nvar checkStatStr = global.get(\"checkStatStr\"); \n\n// from add user to change money\nif (modeSetting == \"addUser\") {\n    global.set(\"customerIndex\", 0);\n    global.set(\"mode\",\"changeMoney\");\n    var changeBalanceStr = global.get(\"changeBalanceStr\");\n    if (reportStat == bad) {\n        msg.payload = pythonPathStr.concat(changeBalanceStr, \"\\n\", checkStatStr);\n    }\n    else {\n    msg.payload = pythonPathStr.concat(changeBalanceStr);\n    }\n    return [msg, null, null, null, null, null, null, null];\n\n// from change money to default    \n} else if (modeSetting == \"changeMoney\") {\n    global.set(\"mode\",\"default\");\n    global.set(\"balance\", 0);\n    global.set(\"id\", -1);\n    var defaultStr = global.get(\"defaultStr\");\n    if (reportStat == bad) {\n        msg.payload = pythonPathStr.concat(defaultStr, \"     \", checkStatStr);\n    }\n    else {\n    msg.payload = pythonPathStr.concat(defaultStr);\n    }\n    return [null, msg, null, null, null, null, null, null];\n \n// from default to Vmin    \n} else if (modeSetting == \"default\") {\n    global.set(\"mode\",\"Vmin\");\n    var VminStr = global.get(\"VminStr\");\n    var Vmin = global.get(\"Vmin\");\n    msg.payload = pythonPathStr.concat(VminStr, Vmin.toString(),\" V\");\n    return [null, null, msg, null, null, null, null, null];\n\n// from Vmin to Vmax    \n} else if (modeSetting == \"Vmin\") {\n    global.set(\"mode\",\"Vmax\");\n    var VmaxStr = global.get(\"VmaxStr\");\n    var Vmax = global.get(\"Vmax\");\n    msg.payload = pythonPathStr.concat(VmaxStr, Vmax.toString(),\" V\");\n    return [null, null, null, msg, null, null, null, null];\n    \n// from Vmax to Imin    \n} else if (modeSetting == \"Vmax\") {\n    global.set(\"mode\",\"Imin\");\n    var IminStr = global.get(\"IminStr\");\n    var Imin = global.get(\"Imin\");\n    msg.payload = pythonPathStr.concat(IminStr, Imin.toString(),\" A\");\n    return [null, null, null, null, msg, null, null, null];\n\n// from Imin to Status    \n} else if (modeSetting == \"Imin\") {\n    global.set(\"mode\",\"status\");\n    var statusStr = global.get(\"statusStr\");\n    if (reportStat == bad) {\n        msg.payload = pythonPathStr.concat(statusStr, \"\\n\", checkStatStr);\n    }\n    else {\n    msg.payload = pythonPathStr.concat(statusStr);\n    }\n    return [null, null, null, null, null, msg, null, null];\n\n// from Status to add user\n} else if (modeSetting == \"status\") {\n    global.set(\"mode\",\"displayCustomers\");\n    var displayCustomersStr = global.get(\"displayCustomersStr\");\n    if (reportStat == bad) {\n        msg.payload = pythonPathStr.concat(displayCustomersStr, \"\\n\", checkStatStr);\n    }\n    else {\n    msg.payload = pythonPathStr.concat(displayCustomersStr);\n    }\n    return [null, null, null, null, null, null, msg, null];\n\n} else if(modeSetting == \"displayCustomers\") {\n    global.set(\"currID\", -1); // delete id\n     global.set(\"mode\",\"addUser\");\n    var addStr = global.get(\"addUserStr\");\n    if (reportStat == bad) {\n        msg.payload = pythonPathStr.concat(addStr, \" \", checkStatStr);\n    }\n    else {\n    msg.payload = pythonPathStr.concat(addStr);\n    }\n    return [null, null, null, null, null, null, null, msg];\n}\n",
        "outputs": "8",
        "noerr": 0,
        "x": 586,
        "y": 139,
        "wires": [
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "3e898c90.aa8834",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Switch Status Mode Clockwise",
        "func": "// switches status sub menu\n\n// get status mode and python path\nvar pythonPathStr = global.get(\"pythonPath\");\nvar statusModeSetting = global.get(\"statusMode\");\nvar good = 1;\nglobal.set(\"reportStat\", good);\n\n// from battery to panel\nif (statusModeSetting == \"batteryStat\") {\n    global.set(\"statusMode\",\"panelStat\");\n    var panelStr = global.get(\"panelStr\");\n    var panelStat = global.get(\"panelStat\");\n    var current = global.get(\"current\");\n    if (panelStat === 0) {\n        var badPanelStr = global.get(\"badPanelStr\");\n        msg.payload = pythonPathStr.concat(panelStr, badPanelStr, \",\", current.toString(), \"A\");\n    } else {\n        var goodPanelStr = global.get(\"goodPanelStr\");\n        msg.payload = pythonPathStr.concat(panelStr, goodPanelStr, \",\", current.toString(), \"A\");\n    }\n    return [msg, null, null];\n\n// from panel to wire\n} else if (statusModeSetting == \"panelStat\") {\n    global.set(\"statusMode\",\"wireStat\");\n    var wireStr = global.get(\"wireStr\");\n    msg.payload = pythonPathStr.concat(wireStr);\n    return [null, msg, null];\n \n// from wire to battery \n} else if (statusModeSetting == \"wireStat\") {\n    global.set(\"statusMode\",\"batteryStat\");\n    var batteryStr = global.get(\"batteryStr\");\n    var batteryStat = global.get(\"batteryStat\");\n    var voltage = global.get(\"voltage\");\n    if (batteryStat === 0) {\n        var badBatteryStr = global.get(\"badBatteryStr\");\n        msg.payload = pythonPathStr.concat(batteryStr, badBatteryStr, \",\", voltage.toString(), \"V\");\n    } else {\n        var goodBatteryStr = global.get(\"goodBatteryStr\");\n        msg.payload = pythonPathStr.concat(batteryStr, goodBatteryStr, \",\", voltage.toString(), \"V\");\n    }\n    return [null, null, msg];\n}\n    ",
        "outputs": "3",
        "noerr": 0,
        "x": 846,
        "y": 434,
        "wires": [
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "a61dbdc2.9e2b",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Switch Status Mode Counterclockwise",
        "func": "// switches status sub menu\n\n// get status mode and python path\nvar pythonPathStr = global.get(\"pythonPath\");\nvar statusModeSetting = global.get(\"statusMode\");\nvar good = 1;\nglobal.set(\"reportStat\", good);\n\n// from battery to wire\nif (statusModeSetting == \"batteryStat\") {\n    global.set(\"statusMode\",\"wireStat\");\n    var wireStr = global.get(\"wireStr\");\n    msg.payload = pythonPathStr.concat(wireStr);\n    return [msg, null, null];\n\n// from wire to panel\n} else if (statusModeSetting == \"wireStat\") {\n    global.set(\"statusMode\",\"panelStat\");\n    var panelStr = global.get(\"panelStr\");\n    var panelStat = global.get(\"panelStat\");\n    var current = global.get(\"current\");\n    if (panelStat === 0) {\n        var badPanelStr = global.get(\"badPanelStr\");\n        msg.payload = pythonPathStr.concat(panelStr, badPanelStr, \",\", current.toString(), \"A\");\n    } else {\n        var goodPanelStr = global.get(\"goodPanelStr\");\n        msg.payload = pythonPathStr.concat(panelStr, goodPanelStr, \",\", current.toString(), \"A\");\n    }\n    return [null, msg, null];\n \n// from panel to battery \n} else if (statusModeSetting == \"panelStat\") {\n    global.set(\"statusMode\",\"batteryStat\");\n    var batteryStr = global.get(\"batteryStr\");\n    var batteryStat = global.get(\"batteryStat\");\n    var voltage = global.get(\"voltage\");\n    if (batteryStat === 0) {\n        var badBatteryStr = global.get(\"badBatteryStr\");\n        msg.payload = pythonPathStr.concat(batteryStr, badBatteryStr, \",\", voltage.toString(), \"V\");\n    } else {\n        var goodBatteryStr = global.get(\"goodBatteryStr\");\n        msg.payload = pythonPathStr.concat(batteryStr, goodBatteryStr, \",\", voltage.toString(), \"V\");\n    }\n    return [null, null, msg];\n}\n    ",
        "outputs": "3",
        "noerr": 0,
        "x": 871,
        "y": 480,
        "wires": [
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "ea332dbc.f4997",
        "type": "ui_button",
        "z": "29872d69.1b57fa",
        "name": "",
        "group": "a500e7c9.a8e7b8",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Mode Button",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "x": 187,
        "y": 179,
        "wires": [
            [
                "90c25fda.b992b"
            ]
        ]
    },
    {
        "id": "71291c7f.46a5b4",
        "type": "ui_button",
        "z": "29872d69.1b57fa",
        "name": "",
        "group": "a500e7c9.a8e7b8",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Add Button",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "x": 202,
        "y": 285,
        "wires": [
            [
                "d415669e.79a8c"
            ]
        ]
    },
    {
        "id": "409a8e01.9ecd1",
        "type": "ui_button",
        "z": "29872d69.1b57fa",
        "name": "",
        "group": "a500e7c9.a8e7b8",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Subtract Button",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "x": 206,
        "y": 383,
        "wires": [
            [
                "d7c36ce4.61293"
            ]
        ]
    },
    {
        "id": "ad9b4b7.18d79b8",
        "type": "inject",
        "z": "891ea5e0.7635a8",
        "name": "",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 87,
        "y": 687,
        "wires": [
            [
                "5714a8d8.5b5ca8"
            ]
        ]
    },
    {
        "id": "1ac3661f.629efa",
        "type": "debug",
        "z": "891ea5e0.7635a8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 622,
        "y": 687,
        "wires": []
    },
    {
        "id": "80bf4fb5.ec183",
        "type": "template",
        "z": "891ea5e0.7635a8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Hello {{name}}! Today is {{date}}",
        "x": 428,
        "y": 687,
        "wires": [
            [
                "1ac3661f.629efa"
            ]
        ]
    },
    {
        "id": "5714a8d8.5b5ca8",
        "type": "function",
        "z": "891ea5e0.7635a8",
        "name": "",
        "func": "var x = {\n  name: \"Fred\",\n  date: \"Monday\"\n}\nreturn x;",
        "outputs": 1,
        "noerr": 0,
        "x": 263,
        "y": 687,
        "wires": [
            [
                "80bf4fb5.ec183"
            ]
        ]
    },
    {
        "id": "1dda28f.7ff94d7",
        "type": "csv",
        "z": "29872d69.1b57fa",
        "name": "Diagnostics Data",
        "sep": ",",
        "hdrin": false,
        "hdrout": false,
        "multi": "one",
        "ret": "\\n",
        "temp": "date,voltage,dischargingCurrent,chargingCurrent",
        "x": 1453,
        "y": 806,
        "wires": [
            [
                "b27e6a1b.0590e"
            ]
        ]
    },
    {
        "id": "83ad2a35.ebef98",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Get Customer List",
        "func": "    msg.topic=\"SELECT * FROM users;\";\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 70,
        "wires": [
            [
                "adb2b331.416f3"
            ]
        ]
    },
    {
        "id": "adb2b331.416f3",
        "type": "mysql",
        "z": "29872d69.1b57fa",
        "mydb": "d675b3db.313288",
        "name": "",
        "x": 1298,
        "y": 78,
        "wires": [
            [
                "684d64ac.feb00c"
            ]
        ]
    },
    {
        "id": "684d64ac.feb00c",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Step Through List Clockwise",
        "func": "var pythonPathStr = global.get(\"pythonPath\");\nvar customerIndex = global.get(\"customerIndex\");\nvar numCustomers = msg.payload.length;\nnode.warn(customerIndex);\n\nif (numCustomers && customerIndex < numCustomers) {\n   if (customerIndex < numCustomers - 1) {\n       ++customerIndex\n       global.set(\"customerIndex\", customerIndex);\n   } var id = msg.payload[customerIndex].id;\n   // setting a global variable to show which id we are on\n   global.set(\"currId\", id);\n   var money = msg.payload[customerIndex].money;\n   var customerStr = global.get(\"customerStr\");\n   var balanceStr2 = global.get(\"balanceStr2\");\n   msg.payload = pythonPathStr.concat(customerStr, id.toString(), balanceStr2, money.toString());\nreturn msg;\n} if (!numCustomers) {\n    var noCustomersStr = global.get(\"noCustomersStr\");\n    msg.payload = pythonPathStr.concat(noCustomersStr);\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1533,
        "y": 75,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "ad6dcaba.f27d88",
        "type": "switch",
        "z": "29872d69.1b57fa",
        "name": "Check mode",
        "property": "mode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "changeMoney",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "addUser",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "default",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 3,
        "x": 684,
        "y": 612,
        "wires": [
            [
                "759c4b47.a8182c"
            ],
            [
                "1e8b8e09.e45faa"
            ],
            [
                "589dbd79.a05584"
            ]
        ]
    },
    {
        "id": "759c4b47.a8182c",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "changeUserBalance",
        "func": "var path_to_python = global.get(\"pythonPath\");\nvar id = global.get(\"id\");\n\n// user already exists and we want to change money\nif(msg.payload.length){     //User already exists\n    var balance = msg.payload[0].money;\n    global.set(\"balance\", balance);\n    var addMoneyStr = global.get(\"addMoneyStr\");\n    msg.payload = path_to_python.concat(id, addMoneyStr, balance);\n    return [msg, null];\n    \n} else { // no user\n    var noAccount = global.get(\"noAccount\");\n    msg.payload = path_to_python.concat(noAccount);\n    return [null, msg];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 915,
        "y": 559,
        "wires": [
            [
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "1e8b8e09.e45faa",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "addUser",
        "func": "var path_to_python = global.get(\"pythonPath\");\nvar id = global.get(\"id\");\n\n// user already exists and are trying to add     \nif (msg.payload.length) {\n    var userAlreadyExistsStr = global.get(\"userAlreadyExists\");\n    msg.payload = path_to_python.concat(userAlreadyExistsStr);\n    return [msg, null];\n    \n// add user    \n} else { \n    msg.topic=\"INSERT INTO users (id,money,stamp,type) VALUES(\"+ id.toString() +\",0,NOW(),'money');\";\n    // making a new message object so that I can insert it into the log text file\n    var userInfoPayload = {};\n    userInfoPayload.date = new Date().toString();\n    userInfoPayload.id = id;\n    userInfoPayload.balance = 0;\n    userInfoPayload.info = global.get(\"userAddedLog\");\n    var addToLog = { payload:userInfoPayload };\n    return [null, msg, addToLog];\n    \n}",
        "outputs": "3",
        "noerr": 0,
        "x": 873,
        "y": 597,
        "wires": [
            [
                "336bee9e.104a8a"
            ],
            [
                "81db020d.76a828"
            ],
            [
                "b9d0d2f9.83849"
            ]
        ]
    },
    {
        "id": "589dbd79.a05584",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "default",
        "func": "var path_to_python = global.get(\"pythonPath\");\nvar id = global.get(\"id\");\n\n    // subtracting money from account, someones using it \n if (msg.payload.length) {\n    // going to add an event into the log file so setting up new msg object\n    var userInfoPayload = {};\n    userInfoPayload.date = new Date().toString();\n    userInfoPayload.id = id;\n    var balance = msg.payload[0].money;\n    \n    // user has money so let's subtract\n    if (balance > 0) { //\n        balance -= 1;\n        msg.topic=\"UPDATE users SET money =\" + balance.toString() + \" where id =\" + id.toString() + \";\";\n        global.set(\"balance\", balance);\n        // initialize other fields for the msg object for adding event into the log file\n        userInfoPayload.balance = balance;\n        userInfoPayload.info = global.get(\"paidLog\");\n        node.warn(global.get(\"paidLog\"));\n        var addToLog = { payload:userInfoPayload };\n    return [msg, addToLog, null, null, null];\n    \n    // not enough money\n    } else { \n        var noMoney = global.get(\"noMoney\");\n        msg.payload = path_to_python.concat(noMoney);\n        // initialize other fields for the msg object for adding event into the log file\n        userInfoPayload.balance = balance;\n        userInfoPayload.info = noMoney;\n        var addToLog = { payload:userInfoPayload };\n        return [null, null, msg, addToLog, null];\n        \n    }\n} else { // trying to subtract, no user\nvar noUser = global.get(\"noUser\");\nmsg.payload = path_to_python.concat(noUser);\nreturn [null, null, null, null, msg];\n}",
        "outputs": "5",
        "noerr": 0,
        "x": 864,
        "y": 702,
        "wires": [
            [
                "30d598c3.fe2fb8",
                "df1a7beb.11a63",
                "fce81d25.91cb28"
            ],
            [
                "b9d0d2f9.83849"
            ],
            [
                "336bee9e.104a8a",
                "3bf30507.c7290a"
            ],
            [
                "b9d0d2f9.83849"
            ],
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "b9d0d2f9.83849",
        "type": "csv",
        "z": "29872d69.1b57fa",
        "name": "Insert Event Into Log File ",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "date,id,balance,info",
        "x": 1439,
        "y": 722,
        "wires": [
            [
                "83cab262.9037e8"
            ]
        ]
    },
    {
        "id": "35da9466.b6d5c4",
        "type": "join",
        "z": "29872d69.1b57fa",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "timeout": "",
        "count": "3",
        "x": 759,
        "y": 907,
        "wires": [
            [
                "e33543d6.e2af1"
            ]
        ]
    },
    {
        "id": "e33543d6.e2af1",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "AddDateToLogMessage",
        "func": "// creating a new object to input into the csv node that contains all the diagnostics data\nvar infoPayload = {};\ninfoPayload.date = new Date().toString();\ninfoPayload.voltage = msg.payload.voltage;\ninfoPayload.dischargingCurrent = msg.payload.dischargingCurrent;\ninfoPayload.chargingCurrent= msg.payload.chargingCurrent;\nmsg.payload = infoPayload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 991,
        "y": 912,
        "wires": [
            [
                "1dda28f.7ff94d7",
                "bc60b0c9.328a"
            ]
        ]
    },
    {
        "id": "b27e6a1b.0590e",
        "type": "file",
        "z": "29872d69.1b57fa",
        "name": "",
        "filename": "/home/pi/Desktop/testData.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "x": 1739,
        "y": 800,
        "wires": []
    },
    {
        "id": "83cab262.9037e8",
        "type": "file",
        "z": "29872d69.1b57fa",
        "name": "",
        "filename": "/home/pi/Desktop/userLog.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "x": 1742,
        "y": 757,
        "wires": []
    },
    {
        "id": "3bce1ebf.27feca",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Step Through List Counterclockwise",
        "func": "var pythonPathStr = global.get(\"pythonPath\");\nvar customerIndex = global.get(\"customerIndex\");\nvar numCustomers = msg.payload.length;\nnode.warn(customerIndex);\n\nif (numCustomers && customerIndex >= 0) {\n   if (customerIndex !== 0) {\n       node.warn(\"here\");\n        --customerIndex;\n        global.set(\"customerIndex\", customerIndex);\n   } \n   // setting a global variable to show which id we are on\n   global.set(\"currId\", id);\n   var id = msg.payload[customerIndex].id;\n   var money = msg.payload[customerIndex].money;\n   var customerStr = global.get(\"customerStr\");\n    var balanceStr2 = global.get(\"balanceStr2\");\n   msg.payload = pythonPathStr.concat(customerStr, id.toString(), balanceStr2, money.toString());\nreturn msg;\n}  if (!numCustomers) {\n    var noCustomersStr = global.get(\"noCustomersStr\");\n    msg.payload = pythonPathStr.concat(noCustomersStr);\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1568,
        "y": 115,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "1e0a26f4.d78ae1",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "Get Customer List",
        "func": "    msg.topic=\"SELECT * FROM users;\";\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1085,
        "y": 102,
        "wires": [
            [
                "1e7c204f.d41e28"
            ]
        ]
    },
    {
        "id": "1e7c204f.d41e28",
        "type": "mysql",
        "z": "29872d69.1b57fa",
        "mydb": "d675b3db.313288",
        "name": "",
        "x": 1298,
        "y": 109,
        "wires": [
            [
                "3bce1ebf.27feca"
            ]
        ]
    },
    {
        "id": "fd81ba47.8faac",
        "type": "inject",
        "z": "29872d69.1b57fa",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": false,
        "x": 104,
        "y": 1066,
        "wires": [
            [
                "29d3c64.83fa1ba"
            ]
        ]
    },
    {
        "id": "50d35a2c.f551f4",
        "type": "pimcp3008",
        "z": "891ea5e0.7635a8",
        "name": "Voltage Sensor",
        "pin": "3",
        "dnum": "1",
        "x": 325.00001525878906,
        "y": 580,
        "wires": [
            [
                "13f9cb44.cb85fd"
            ]
        ]
    },
    {
        "id": "13f9cb44.cb85fd",
        "type": "function",
        "z": "891ea5e0.7635a8",
        "name": "",
        "func": "var voltage = msg.payload*0.052;\nvar newMsg = {payload: voltage.toFixed(2)};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 599.0000152587891,
        "y": 613,
        "wires": [
            [
                "b7e819ea.4502f8"
            ]
        ]
    },
    {
        "id": "bc07a22f.ed9eb8",
        "type": "pimcp3008",
        "z": "891ea5e0.7635a8",
        "name": "Charging Current ",
        "pin": "1",
        "dnum": "1",
        "x": 353.00001525878906,
        "y": 476,
        "wires": [
            [
                "28031b74.e582dc"
            ]
        ]
    },
    {
        "id": "ffae4fdc.2f6198",
        "type": "pimcp3008",
        "z": "891ea5e0.7635a8",
        "name": "Voltage",
        "pin": "2",
        "dnum": "1",
        "x": 331.00001525878906,
        "y": 519,
        "wires": [
            [
                "43e5bfdd.c9405"
            ]
        ]
    },
    {
        "id": "2cda914f.5e192e",
        "type": "function",
        "z": "891ea5e0.7635a8",
        "name": "",
        "func": "var adc = msg.payload;\nvar numAdcBits = 1024;\nvar current = 36.7*adc/numAdcBits - 18.3;\nvar newMsg = {payload: current.toFixed(2)};\n//return msg;\nreturn newMsg;",
        "outputs": "1",
        "noerr": 0,
        "x": 614.0000152587891,
        "y": 431,
        "wires": [
            [
                "9a080d62.5fa58",
                "4fa109aa.23e418"
            ]
        ]
    },
    {
        "id": "28031b74.e582dc",
        "type": "function",
        "z": "891ea5e0.7635a8",
        "name": "",
        "func": "var adc = msg.payload;\nvar numAdcBits = 1024;\nvar current = 36.7*adc/numAdcBits - 18.3;\nvar newMsg = {payload: current.toFixed(2)};\n//return msg;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 611.0000152587891,
        "y": 487,
        "wires": [
            [
                "5db334fc.65ca34",
                "bfea6eaf.84297"
            ]
        ]
    },
    {
        "id": "43e5bfdd.c9405",
        "type": "function",
        "z": "891ea5e0.7635a8",
        "name": "",
        "func": "var adc = msg.payload;\nvar numAdcBits = 1024;\nvar maxBattVoltage = 18;\nvar voltage = maxBattVoltage*adc/numAdcBits;\nvar twoDecVoltage = Math.round(voltage * 100) / 100;\nglobal.set(\"voltage\", twoDecVoltage);\n\nvar Vmax = global.get(\"Vmax\");\nvar Vmin = global.get(\"Vmin\");\n\nif (voltage >= Vmax || voltage <= Vmin) {\n    global.set(\"batteryStat\", 0);\n    global.set(\"reportStat\", 0);\n}\n\nelse {\n    global.set(\"batteryStat\", 1);\n}\n\nmsg.topic=\"INSERT INTO voltage_values (stamp,voltage) VALUES(NOW(),\"+ voltage.toString() + \");\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 609.0000152587891,
        "y": 539,
        "wires": [
            []
        ]
    },
    {
        "id": "d8d722d8.adfcc8",
        "type": "inject",
        "z": "891ea5e0.7635a8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 139.00001525878906,
        "y": 531,
        "wires": [
            [
                "bc07a22f.ed9eb8",
                "ffae4fdc.2f6198",
                "50d35a2c.f551f4",
                "adf7055d.5ac19"
            ]
        ]
    },
    {
        "id": "e574edd2.1b86c8",
        "type": "ui_button",
        "z": "891ea5e0.7635a8",
        "name": "",
        "group": "4b67cba4.35d9d4",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Retrieve values",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 106.00001525878906,
        "y": 577,
        "wires": [
            [
                "50d35a2c.f551f4",
                "bc07a22f.ed9eb8",
                "adf7055d.5ac19"
            ]
        ]
    },
    {
        "id": "b7e819ea.4502f8",
        "type": "ui_text",
        "z": "891ea5e0.7635a8",
        "group": "4b67cba4.35d9d4",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Voltage",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 747.0000152587891,
        "y": 613,
        "wires": []
    },
    {
        "id": "5db334fc.65ca34",
        "type": "ui_text",
        "z": "891ea5e0.7635a8",
        "group": "4b67cba4.35d9d4",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Charging Current",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 779.0000152587891,
        "y": 472,
        "wires": []
    },
    {
        "id": "9a080d62.5fa58",
        "type": "ui_text",
        "z": "891ea5e0.7635a8",
        "group": "4b67cba4.35d9d4",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Discharge Current",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 793.0000152587891,
        "y": 431,
        "wires": []
    },
    {
        "id": "bfea6eaf.84297",
        "type": "ui_chart",
        "z": "891ea5e0.7635a8",
        "name": "I_charge",
        "group": "e17d5f6.0c28a2",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "I_charge",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "ymin": "0",
        "ymax": "2",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "colors": [
            "#1F77B4",
            "#AEC7E8",
            "#FF7F0E",
            "#2CA02C",
            "#98DF8A",
            "#D62728",
            "#FF9896",
            "#9467BD",
            "#C5B0D5"
        ],
        "x": 765.0000152587891,
        "y": 541,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "772001d6.4ad79",
        "type": "csv",
        "z": "891ea5e0.7635a8",
        "name": "Voltage",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "date,payload",
        "x": 131.00001525878906,
        "y": 476.0000305175781,
        "wires": [
            []
        ]
    },
    {
        "id": "4fa109aa.23e418",
        "type": "ui_chart",
        "z": "891ea5e0.7635a8",
        "name": "I_discharge",
        "group": "e17d5f6.0c28a2",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "I_discharge",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "ymin": "0",
        "ymax": "2",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "colors": [
            "#1F77B4",
            "#AEC7E8",
            "#FF7F0E",
            "#2CA02C",
            "#98DF8A",
            "#D62728",
            "#FF9896",
            "#9467BD",
            "#C5B0D5"
        ],
        "x": 769.0000152587891,
        "y": 385,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "45a6ca39.62351c",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "TimeOfPress",
        "func": "var date= new Date();\nvar TimeNow = date.getTime();\nglobal.set(\"TimeOfPress\", TimeNow);\nmsg.payload = TimeNow;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 286,
        "y": 485,
        "wires": [
            []
        ]
    },
    {
        "id": "29d3c64.83fa1ba",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "UpdateScreenIfNoButtonPressed",
        "func": "var pythonPathStr = global.get(\"pythonPath\");\nvar date=new Date();\nvar TimeNow = date.getTime();\nvar TimeDiff=TimeNow - global.get(\"TimeOfPress\");\nif (TimeDiff > 30000) {// no button pressed for the last 30 seconds, show status on screen\n    var InfoString = global.get(\"InfoString\");\n    msg.payload = pythonPathStr.concat(InfoString);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 362,
        "y": 1069,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "6bc8741d.dc728c",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "InitializeTimeOfPress",
        "func": "\nglobal.set(\"TimeOfPress\", 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 351,
        "y": 562.0000305175781,
        "wires": [
            []
        ]
    },
    {
        "id": "bc60b0c9.328a",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "CreateInfoString",
        "func": "//var DateString = msg.payload.date;\nvar DateString = \"\";\nvar VoltString = msg.payload.voltage.toString();\nvar DischargingCurrentString = msg.payload.dischargingCurrent.toString();\nvar ChargingCurrentString = msg.payload.chargingCurrent.toString();\nvar InfoString = DateString.concat(\"V:\", VoltString,\"V\", \" Id:\", DischargingCurrentString,\"A\", \" Ic:\", ChargingCurrentString,\"A\");\nglobal.set(\"InfoString\", InfoString);\n\nmsg.payload = InfoString;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1218,
        "y": 967,
        "wires": [
            []
        ]
    },
    {
        "id": "aec0f6af.da79a8",
        "type": "pimcp3008",
        "z": "29872d69.1b57fa",
        "name": "Voltage Sensor",
        "pin": "3",
        "dnum": "1",
        "x": 295,
        "y": 979,
        "wires": [
            [
                "ea50d5f5.a8b04"
            ]
        ]
    },
    {
        "id": "ea50d5f5.a8b04",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "",
        "func": "var adc = msg.payload;\nvar voltage = adc*0.052;\nvar twoDecVoltage = Math.round(voltage * 100) / 100;\nglobal.set(\"voltage\", twoDecVoltage);\n\nmsg.topic = \"voltage\";\nmsg.payload = twoDecVoltage;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 471,
        "y": 993,
        "wires": [
            [
                "35da9466.b6d5c4"
            ]
        ]
    },
    {
        "id": "474834c8.a3fc4c",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "writing system starting into log",
        "func": "var userInfoPayload = {};\nuserInfoPayload.date = new Date().toString();\nuserInfoPayload.id = 0;\nuserInfoPayload.balance = -1;\nuserInfoPayload.info = global.get(\"systemStarting\");\nmsg.payload = userInfoPayload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 315,
        "y": 613,
        "wires": [
            [
                "b9d0d2f9.83849"
            ]
        ]
    },
    {
        "id": "ad32dead.1ad67",
        "type": "rpi-gpio in",
        "z": "29872d69.1b57fa",
        "name": "Shutdown Button Quick Press",
        "pin": "32",
        "intype": "in",
        "debounce": "100",
        "read": false,
        "x": 203,
        "y": 70,
        "wires": [
            [
                "ae443bc8.214ad8"
            ]
        ]
    },
    {
        "id": "ae443bc8.214ad8",
        "type": "switch",
        "z": "29872d69.1b57fa",
        "name": "Button on?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 417,
        "y": 60,
        "wires": [
            [
                "45a6ca39.62351c",
                "cb6b5622.da89e8"
            ]
        ]
    },
    {
        "id": "81b87b8.6fb0288",
        "type": "debug",
        "z": "29872d69.1b57fa",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 935,
        "y": 20,
        "wires": []
    },
    {
        "id": "adf7055d.5ac19",
        "type": "pimcp3008",
        "z": "891ea5e0.7635a8",
        "name": "Discharge Current ",
        "pin": 0,
        "dnum": "1",
        "x": 367.00001525878906,
        "y": 433,
        "wires": [
            [
                "2cda914f.5e192e"
            ]
        ]
    },
    {
        "id": "6a1262ea.3775a4",
        "type": "exec",
        "z": "29872d69.1b57fa",
        "command": "sudo poweroff #",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "5",
        "name": "turn off Pi",
        "x": 656,
        "y": 1173.583251953125,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b119ec51.3ef27",
        "type": "rpi-gpio in",
        "z": "29872d69.1b57fa",
        "name": "Shutdown",
        "pin": "32",
        "intype": "in",
        "debounce": "10000",
        "read": false,
        "x": 74.00001525878906,
        "y": 1172.583251953125,
        "wires": [
            [
                "3aa6f220.3554ae"
            ]
        ]
    },
    {
        "id": "3aa6f220.3554ae",
        "type": "switch",
        "z": "29872d69.1b57fa",
        "name": "Button on?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 243,
        "y": 1173.583251953125,
        "wires": [
            [
                "6a6ecd2.13b93b4",
                "5a3c2e10.2f2d",
                "45a6ca39.62351c"
            ]
        ]
    },
    {
        "id": "5a3c2e10.2f2d",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "",
        "func": "var pythonPathStr = global.get(\"pythonPath\");\nmsg.payload = pythonPathStr.concat(\"SPEED Shutting Down\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 437.70001220703125,
        "y": 1117.683349609375,
        "wires": [
            [
                "336bee9e.104a8a"
            ]
        ]
    },
    {
        "id": "6a6ecd2.13b93b4",
        "type": "delay",
        "z": "29872d69.1b57fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 454.70001220703125,
        "y": 1173.8499755859375,
        "wires": [
            [
                "6a1262ea.3775a4"
            ]
        ]
    },
    {
        "id": "cb6b5622.da89e8",
        "type": "function",
        "z": "29872d69.1b57fa",
        "name": "",
        "func": "var modeSetting = global.get(\"mode\");\n//var bothButtonsPressed = \"1\";\n//var buttonsPressed = msg.payload;\nvar idToDelete = global.get(\"currId\");\nvar pythonPathStr = global.get(\"pythonPath\");\n\nif (modeSetting == \"displayCustomers\") {\n    if (idToDelete == -1) {\n        var noIDToDeleteStr = global.get(\"noIDToDeleteStr\");\n        node.warn(\"no customers to delete\");\n        msg.payload = pythonPathStr.concat(noIDToDeleteStr);\n        return [null, msg];\n    } else {\n        msg.topic=\"DELETE FROM users WHERE id=\"+ idToDelete.toString() + \";\";\n        var successfulDeleteStr = global.get(\"successfulDeleteStr\");\n        var customerIndex = global.get(\"customerIndex\");\n        var updatedIndex = customerIndex - 1;\n        global.set(\"customerIndex\", updatedIndex);\n        msg.payload = pythonPathStr.concat(successfulDeleteStr, idToDelete.toString());\n        return [msg, null];\n    }\n    \n} /*else { // bad delete error \n    var deleteErrorStr = global.get(\"deleteErrorStr\");\n    msg.payload = pythonPathStr.concat(deleteErrorStr);\n    return [null, msg];\n    \n}\n*/",
        "outputs": "2",
        "noerr": 0,
        "x": 729,
        "y": 55,
        "wires": [
            [
                "81b87b8.6fb0288",
                "ac98e1bb.a6c1e8",
                "336bee9e.104a8a"
            ],
            [
                "336bee9e.104a8a"
            ]
        ]
    }
]